/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

GacGen.exe Resource.xml

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#include "GacPass.h"
/* CodePack:BeginIgnore() */
#ifndef VCZH_DEBUG_NO_REFLECTION
/* CodePack:ConditionOff(VCZH_DEBUG_NO_REFLECTION, GacPassReflection.h) */
#include "GacPassReflection.h"
#endif
/* CodePack:EndIgnore() */

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wparentheses-equality"
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#endif

#define GLOBAL_SYMBOL ::vl_workflow_global::GacPass::
#define GLOBAL_NAME ::vl_workflow_global::GacPass::Instance().
#define GLOBAL_OBJ &::vl_workflow_global::GacPass::Instance()

/***********************************************************************
Class (::gacpass::RegisterWindow)
***********************************************************************/

namespace gacpass
{
	::vl::Ptr<::gacpass::IRegisterViewModel> RegisterWindow::GetViewModel()
	{
		return this->__vwsn_prop_ViewModel;
	}
	void RegisterWindow::SetViewModel(::vl::Ptr<::gacpass::IRegisterViewModel> __vwsn_value_)
	{
		if ((this->__vwsn_prop_ViewModel.Obj() != __vwsn_value_.Obj()))
		{
			(this->__vwsn_prop_ViewModel = __vwsn_value_);
			::vl::__vwsn::EventInvoke(this->ViewModelChanged)();
		}
	}

	RegisterWindow::RegisterWindow()
		: ::vl::presentation::controls::GuiCustomControl(::vl::presentation::theme::ThemeName::CustomControl)
		, __vwsn_prop_ViewModel(::vl::Ptr<::gacpass::IRegisterViewModel>())
	{
		auto __vwsn_resource_ = ::vl::__vwsn::This(::vl::presentation::GetResourceManager())->GetResourceFromClassName(::vl::WString(L"gacpass::RegisterWindow", false));
		auto __vwsn_resolver_ = ::vl::Ptr<::vl::presentation::GuiResourcePathResolver>(new ::vl::presentation::GuiResourcePathResolver(__vwsn_resource_, ::vl::__vwsn::This(__vwsn_resource_.Obj())->GetWorkingDirectory()));
		::vl::__vwsn::This(this)->SetResourceResolver(__vwsn_resolver_);
		::vl::__vwsn::This(this)->__vwsn_gacpass_RegisterWindow_Initialize(this);
	}

	RegisterWindow::~RegisterWindow()
	{
		this->FinalizeInstanceRecursively(static_cast<::vl::presentation::controls::GuiCustomControl*>(this));
	}

}
#undef GLOBAL_SYMBOL
#undef GLOBAL_NAME
#undef GLOBAL_OBJ

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#elif defined(__clang__)
#pragma clang diagnostic pop
#endif
