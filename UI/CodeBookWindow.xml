<Folder>

	<Image content="File" name="Folder">Folder.png</Image>
	<Image content="File" name="New">New.png</Image>
	<Image content="File" name="Edit">Edit.png</Image>
	<Image content="File" name="Delete">Delete.png</Image>

	<Script>
		<Workflow>
			<![CDATA[
			module viewmodel;
			using system::*;

			namespace gacpass
			{
				interface ICode
				{
					prop Website	: string {const, not observe}
					prop Username	: string {const, not observe}
					prop Password	: string {const, not observe}
					func GetHidePassword() : string;
					prop HidePassword : string {GetHidePassword}

					func Update(website : string, username : string, password: string) : void;
				}

				interface ICodeBookViewModel
				{
					prop Codes : observe ICode^[] {const, not observe}
					prop Search : string {}
					prop SelectedCode : ICode^ {}

					func CreateCode() : ICode^;
					func AddCode(code : ICode^) : void;
					func UpdateCode(code : ICode^) : void;
					func RemoveCode(code : ICode^) : void;

					func OnItemLeftButtonDoubleClick(arguments : presentation::compositions::GuiItemMouseEventArgs*) : void;

				}
			}
			]]>
		</Workflow>
	</Script>
	<Instance name="CodeBookWindow">
		<Instance ref.Class="gacpass::CodeBookWindow">
			<ref.Parameter Name="ViewModel" Class="gacpass::ICodeBookViewModel" />
			<ref.Parameter Name="MainWindow" Class="presentation::controls::GuiWindow"/>
			<CustomControl ref.Name="self">
				<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>

				<att.ViewModel-set>
					<att.SelectedCode-bind>listViewCodes.SelectedItem as (gacpass::ICode^)</att.SelectedCode-bind>
					<att.Search-bind>textBoxSearch.Text</att.Search-bind>
				</att.ViewModel-set>

				<ToolstripCommand ref.Name="commandNewCode" Image-uri="res://CodeBookWindowResource/New">
					<ev.Executed-eval>
						<![CDATA[
                $Async{
                  var code = ViewModel.CreateCode();
                  var window = new gacpass::NewCodeWindow*(ViewModel);
                  window.MoveToScreenCenter();
                  window.SetCode(code);
                  $Await window.ShowModalAsync(self.MainWindow);
                  
                  if (window.Ready)
                  {
                    ViewModel.AddCode(code);
                  }
                  delete window;
                }
              ]]>
					</ev.Executed-eval>
				</ToolstripCommand>
				<ToolstripCommand ref.Name="commandEditCode" Image-uri="res://CodeBookWindowResource/Edit">
					<att.Enabled-bind>ViewModel.SelectedCode is not null</att.Enabled-bind>
					<ev.Executed-eval>
						<![CDATA[
                $Async{
                  var window = new gacpass::NewCodeWindow*(ViewModel);
                  window.ForEdit = true;
                  window.MoveToScreenCenter();
                  window.SetCode(ViewModel.SelectedCode);
                  $Await window.ShowModalAsync(self.MainWindow);
				  if (window.Ready)
                  {
				    ViewModel.UpdateCode(ViewModel.SelectedCode);
				  }
                  delete window;
                }
              ]]>
					</ev.Executed-eval>
				</ToolstripCommand>
				<ToolstripCommand ref.Name="commandRemoveCode" Image-uri="res://CodeBookWindowResource/Delete">
					<att.Enabled-bind>ViewModel.SelectedCode is not null</att.Enabled-bind>
					<ev.Executed-eval>
						<![CDATA[
                $Async{
				  ViewModel.RemoveCode(ViewModel.SelectedCode);
                }
              ]]>
					</ev.Executed-eval>
				</ToolstripCommand>

				<Table CellPadding="5" BorderVisible="false" AlignmentToParent="left:0 top:28 right:0 bottom:0">
					
					<att.Rows>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:Percentage percentage:1.0</CellOption>
					</att.Rows>
					<att.Columns>
						<CellOption>composeType:Percentage percentage:1.0</CellOption>
					</att.Columns>

					<Cell Site="row:0 column:0">
						<ToolstripToolBar>
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
							<ToolstripButton Command-ref="commandNewCode"/>
							<ToolstripButton Command-ref="commandEditCode"/>
							<ToolstripButton Command-ref="commandRemoveCode"/>
						</ToolstripToolBar>
						<SinglelineTextBox ref.Name="textBoxSearch">
							<att.BoundsComposition-set AlignmentToParent="left:100 top:0 right:0 bottom:0" PreferredMinSize="x:100 y:24"/>
						</SinglelineTextBox>
					</Cell>
					<Cell Site="row:1 column:0">
						<BindableListView ref.Name="listViewCodes" View="Detail" HorizontalAlwaysVisible="false" VerticalAlwaysVisible="false" env.ItemType="gacpass::ICode^" ev.ItemLeftButtonDoubleClick-eval="ViewModel.OnItemLeftButtonDoubleClick(arguments);">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
							<att.ItemSource-bind>
								<![CDATA[
									ViewModel.Codes ?? null
								]]>
							</att.ItemSource-bind>

							<att.Columns>
								<ListViewColumn Text="Website" TextProperty="Website" Size="120"/>
								<ListViewColumn Text="Username" TextProperty="Username" Size="120"/>
								<ListViewColumn Text="Passowrd" TextProperty="HidePassword" Size="120"/>
							</att.Columns>

							<att.DataColumns>
								<_>1</_>
								<_>2</_>
							</att.DataColumns>
						</BindableListView>
					</Cell>
				</Table>
			</CustomControl>
		</Instance>
	</Instance>

	<Instance name="NewCodeWindow">
		<Instance ref.CodeBehind="false" ref.Class="gacpass::NewCodeWindow">
			<ref.Members>
				<![CDATA[
            prop ForEdit : bool = false {}

            var Ready : bool = false;
            var Code : ICode^ = null;
            
            func SetCode(value : ICode^): void
            {
              Code = value;
              textBoxWebsite.Text = Code.Website;
              textBoxUsername.Text = Code.Username;
              textBoxPassword.Text = Code.Password;
            }
          ]]>
			</ref.Members>
			<ref.Parameter Name="ViewModel" Class="gacpass::ICodeBookViewModel"/>
			<Window ref.Name="self" Text-bind="self.ForEdit ? 'Edit Code' : 'New Code'" ClientSize="x:480 y:400" MaximizedBox="false" MinimizedBox="false" SizeBox="false">
				<att.BoundsComposition-set PreferredMinSize="x:480 y:400"/>
				<Table CellPadding="5" AlignmentToParent="left:0 top:0 right:0 bottom:0">
					<att.Rows>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:Percentage percentage:1.0</CellOption>
						<CellOption>composeType:MinSize</CellOption>
					</att.Rows>
					<att.Columns>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:Percentage percentage:1.0</CellOption>
						<CellOption>composeType:MinSize</CellOption>
						<CellOption>composeType:MinSize</CellOption>
					</att.Columns>

					<Cell Site="row:0 column:0" InternalMargin="top:6">
						<Label Text="Website:"/>
					</Cell>
					<Cell Site="row:0 column:1 columnSpan:3">
						<DocumentTextBox ref.Name="textBoxWebsite" EditMode="Editable">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
						</DocumentTextBox>
					</Cell>

					<Cell Site="row:1 column:0" InternalMargin="top:6">
						<Label Text="Username:"/>
					</Cell>
					<Cell Site="row:1 column:1 columnSpan:3">
						<DocumentTextBox ref.Name="textBoxUsername" EditMode="Editable">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
						</DocumentTextBox>
					</Cell>

					<Cell Site="row:2 column:0" InternalMargin="top:6">
						<Label Text="Password:"/>
					</Cell>
					<Cell Site="row:2 column:1 columnSpan:3">
						<SinglelineTextBox ref.Name="textBoxPassword">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
						</SinglelineTextBox>
					</Cell>

					<Cell Site="row:5 column:2">
						<Button Text="OK">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0" PreferredMinSize="x:60"/>
							<ev.Clicked-eval>
								<![CDATA[
                    {
                      self.Code.Update(textBoxWebsite.Text, textBoxUsername.Text, textBoxPassword.Text);
                      self.Ready = true;
                      self.Close();
                    }
                  ]]>
							</ev.Clicked-eval>
						</Button>
					</Cell>
					<Cell Site="row:5 column:3">
						<Button Text="Cancel">
							<att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0" PreferredMinSize="x:60"/>
							<ev.Clicked-eval>
								<![CDATA[
                    {
                      self.Ready = false;
                      self.Close();
                    }
                  ]]>
							</ev.Clicked-eval>
						</Button>
					</Cell>
				</Table>
			</Window>
		</Instance>
	</Instance>

</Folder>